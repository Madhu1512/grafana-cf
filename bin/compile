#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

[[ ${SHELL_TRACE} ]] && set -x
set -euo pipefail

BUILD_DIR=${1}
CACHE_DIR=${2}
BUILDPACK=$(cd $(dirname ${0})/..; pwd)
GRAFANA_TARGET=${BUILD_DIR}/grafana
CONF_TARGET=${GRAFANA_TARGET}/config
CONF_SRC=${BUILDPACK}/config
source ${BUILDPACK}/bin/common.sh

GRAFANA_VERSION=3.1.1-1470047149
GRAFANA_ARCHIVE=grafana-${GRAFANA_VERSION}.tar.gz

export BUILDPACK_PATH=${BUILDPACK}

if [ ! -d ${CACHE_DIR} ]; then
  status "Creating ${CACHE_DIR}"
  mkdir ${CACHE_DIR}
fi

if [ ! -d ${GRAFANA_TARGET} ]; then
  status "Creating ${GRAFANA_TARGET}"
  mkdir -p ${GRAFANA_TARGET}
fi

if [ -f "${CACHE_DIR}/${GRAFANA_ARCHIVE}" ]; then
  status "Using file from cache: ${GRAFANA_ARCHIVE}"
else
  status "Downloading Grafana Version: ${GRAFANA_ARCHIVE}"
  curl --location -s \
    -o "${CACHE_DIR}/${GRAFANA_ARCHIVE}" \
    https://grafanarel.s3.amazonaws.com/builds/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz
fi

mkdir -p ${CONF_TARGET}

status "Extracting..."
tar xfz ${CACHE_DIR}/${GRAFANA_ARCHIVE} --strip-components 1 -C ${GRAFANA_TARGET}

for SRC in ${CONF_SRC}/*; do
  TARGET="${CONF_TARGET}/$(basename ${SRC})"
  [[ -r ${TARGET} ]] && cp -n ${SRC} ${TARGET}.overriden-grafana-cf-default
  [[ -r ${TARGET} ]] || cp    ${SRC} ${TARGET}
done

cp -f ${BUILDPACK}/bin/run.sh ${GRAFANA_TARGET}/
status "=-=-=-=-=-> Done."

exit 0
